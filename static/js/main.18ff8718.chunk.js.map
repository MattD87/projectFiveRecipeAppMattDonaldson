{"version":3,"sources":["fakeList.js","components/RecipeLayout.js","components/RecipeList.js","fakeInfo.js","components/RecipeInfo.js","components/Search.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","RecipeLayout","this","props","recipeNew","viewDetails","className","key","src","alt","onClick","Component","RecipeList","isLoading","map","individualRecipe","recipe","f2f_url","ingredients","publisher_url","RecipeInfo","getInfo","axios","method","url","dataResponse","params","rId","id","then","res","data","setState","state","handleDisplay","ing","index","Search","value","searchInput","searchSubmit","onSubmit","type","placeholder","onChange","Header","Footer","App","getData","results","length","catch","error","console","log","showInfo","displayList","check","event","searchTerms","target","e","preventDefault","defaultUrl","query","search","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.18ff8718.chunk.js","sourcesContent":["export const recipes = [\r\n         {\r\n           recipe_id: 100,\r\n           image_url:\r\n             \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n           title: \"Jam Sandwich\",\r\n           publisher: \"Closet Cooking\",\r\n           source_url:\r\n             \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n         },\r\n         {\r\n           recipe_id: 101,\r\n           image_url:\r\n             \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n           title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n           publisher: \"Closet Cooking\",\r\n           source_url:\r\n             \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n         },\r\n         {\r\n           recipe_id: 102,\r\n           image_url:\r\n             \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n           title: \"Grilled Cheese Sandwich\",\r\n           publisher: \"Closet Cooking\",\r\n           source_url:\r\n             \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n         },\r\n         {\r\n           recipe_id: 103,\r\n           image_url:\r\n             \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n           title: \"Pad Thai\",\r\n           publisher: \"Closet Cooking\",\r\n           source_url:\r\n             \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n         },\r\n         {\r\n           recipe_id: 104,\r\n           image_url:\r\n             \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n           title: \"Ham\",\r\n           publisher: \"Closet Cooking\",\r\n           source_url:\r\n             \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n         },\r\n         {\r\n           recipe_id: 105,\r\n           image_url:\r\n             \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n           title: \"Burrito\",\r\n           publisher: \"Closet Cooking\",\r\n           source_url:\r\n             \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n         },\r\n         {\r\n           recipe_id: 106,\r\n           image_url:\r\n             \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n           title: \"Cake!\",\r\n           publisher: \"Closet Cooking\",\r\n           source_url:\r\n             \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n         },\r\n         {\r\n           recipe_id: 107,\r\n           image_url:\r\n             \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n           title: \"Chow Mein\",\r\n           publisher: \"Closet Cooking\",\r\n           source_url:\r\n             \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n         },\r\n         {\r\n           recipe_id: 108,\r\n           image_url:\r\n             \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n           title: \"Lasagna\",\r\n           publisher: \"Closet Cooking\",\r\n           source_url:\r\n             \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n         }\r\n       ];","import React, { Component } from \"react\";\r\n\r\nclass RecipeLayout extends Component {\r\n  render() {\r\n    const { title, image_url, recipe_id } = this.props.recipeNew;\r\n    const {viewDetails} = this.props\r\n\r\n\r\n    return (\r\n        <div className=\"recipeCard\" key={recipe_id}>\r\n          <h3>{title}</h3>\r\n          <img src={image_url} alt={title}></img>\r\n          <div className=\"buttonContainer\">\r\n            <button onClick={viewDetails}>View Details</button>\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nexport default RecipeLayout;\r\n","import React, { Component } from \"react\";\r\nimport RecipeLayout from \"./RecipeLayout\";\r\n// import Search from \"./Search\";\r\n\r\nclass RecipeList extends Component {\r\n  render() {\r\n    const { recipes, isLoading, viewDetails } = this.props;\r\n    return (\r\n      <section className=\"recipes\">\r\n        <h2>Recipes List:</h2>\r\n        <div className=\"recipeContainer\">\r\n          {/* Take out ! to make work with API */}\r\n          {!isLoading ? (\r\n            <p>...Loading</p>\r\n          ) : (\r\n            recipes.map(individualRecipe => {\r\n              return (\r\n                <RecipeLayout\r\n                  key={individualRecipe.recipe_id}\r\n                  recipeNew={individualRecipe}\r\n                  viewDetails={()=> viewDetails(false, individualRecipe.recipe_id)}\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default RecipeList;\r\n","export const recipe = {\r\n  f2f_url: \"http://food2fork.com/view/35382\",\r\n  image_url:\r\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n  ingredients: [\r\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\r\n    \"2 slices sour dough bread\",\r\n    \"1 tablespoon butter, room temperature\",\r\n    \"2 tablespoons cream cheese, room temperature\",\r\n    \"1/2 cup jack and cheddar cheese, shredded\",\r\n    \"1 tablespoon tortilla chips, crumbled\"\r\n  ],\r\n  publisher: \"Closet Cooking\",\r\n  publisher_url: \"http://closetcooking.com\",\r\n  source_url:\r\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\r\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\r\n};","import React, { Component } from \"react\";\r\nimport { recipe } from \"../fakeInfo\";\r\nimport axios from \"axios\";\r\n\r\nclass RecipeInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // recipe: {},\r\n      recipe: recipe,\r\n      url: \"https://www.food2fork.com/api/get\"\r\n    };\r\n  }\r\n\r\n  getInfo = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"https://www.food2fork.com/api/get\",\r\n      dataResponse: \"json\",\r\n      params: {\r\n        key: \"07d7e44a4bc10ad558be2bdd5a88bbbc\",\r\n        rId: `${this.props.id}`\r\n      }\r\n    }).then(res => {\r\n      res = res.data.recipe;\r\n\r\n      this.setState({\r\n        recipe: res\r\n      });\r\n    });\r\n  };\r\n\r\n  // componentDidMount() {\r\n  //  this.getInfo();\r\n  // }\r\n\r\n  render() {\r\n    const { title, image_url, ingredients } = this.state.recipe;\r\n    const { handleDisplay } = this.props;\r\n    return (\r\n      <section className=\"recipeInfo\">\r\n        <div className=\"imageContainer\">\r\n          <img src={image_url} alt={title}></img>\r\n        </div>\r\n        <div className=\"infoContainer\">\r\n          <h3>{title}</h3>\r\n          <h4>Ingredients:</h4>\r\n          <ul className=\"ingredientList\">\r\n            {ingredients.map((ing, index) => {\r\n              return <li key={index}>{ing}</li>;\r\n            })}\r\n          </ul>\r\n          <div className=\"buttonContainer\">\r\n            <button>Recipe Directions</button>\r\n            <button onClick={() => handleDisplay(true)}>Back to Recipes</button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default RecipeInfo;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    const { value, searchInput, searchSubmit } = this.props;\r\n    return (\r\n      <div className=\"searchContainer\">\r\n        <h4>Enter ingredients seperated by a comma</h4>\r\n        <form className=\"searchBar\" onSubmit={searchSubmit}>\r\n          <input type=\"text\" placeholder=\"beef, carrots, onions\" value={value} onChange={searchInput}/>\r\n          <button className=\"search\">\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { value, searchInput, searchSubmit } = this.props;\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>\r\n            <i className=\"fas fa-pizza-slice\"></i>\r\n            Recipes To Go\r\n            {/* <i className=\"fas fa-carrot\"></i> */}\r\n          </h1>\r\n          <Search\r\n            value={value}\r\n            searchInput={searchInput}\r\n            searchSubmit={searchSubmit}\r\n          />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <p>Copyright Matt Donaldson 2019 &copy;</p>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { recipes } from \"./fakeList\";\nimport RecipeList from \"./components/RecipeList\";\nimport RecipeInfo from \"./components/RecipeInfo\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      // recipes: [],\n      recipes: recipes,\n      url:\n        \"https://www.food2fork.com/api/search?key=07d7e44a4bc10ad558be2bdd5a88bbbc\",\n      defaultUrl:\n        \"https://www.food2fork.com/api/search?key=07d7e44a4bc10ad558be2bdd5a88bbbc\",\n      isLoading: true,\n      displayList: true,\n      id: 35384,\n      searchTerms: \"\",\n      query: \"&q=\",\n      key: \"2d3c3b859bd6007b3ad1b5d31f2886ec\"\n    };\n  }\n\n  // make ajax request\n  getData = url => {\n    axios({\n      method: \"GET\",\n      url: url,\n      dataResponse: \"json\"\n      // headers: { \"Access-Control-Allow-Origin\": \"*\" }\n      // params: {\n      //   key: \"07d7e44a4bc10ad558be2bdd5a88bbbc\"\n      // }\n    })\n      .then(results => {\n        //store ajax call info into a variable called results and limit the results (default is 30)\n        results = results.data.recipes;\n        results.length = 12;\n\n        this.setState({\n          recipes: results,\n          isLoading: false\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        //redo axios with new API key if first one fails\n        axios({\n          method: \"GET\",\n          url: \"https://www.food2fork.com/api/search\",\n          dataResponse: \"json\",\n          params: {\n            key: \"2d3c3b859bd6007b3ad1b5d31f2886ec\"\n          }\n        }).then(results => {\n          //store ajax call info into a variable called results and limit the results (default is 30)\n          results = results.data.recipes;\n          results.length = 12;\n\n          this.setState({\n            recipes: results,\n            isLoading: false\n          });\n        });\n      });\n  };\n\n  // componentDidMount() {\n  //   this.getData(this.state.url);\n  // }\n\n  showInfo = () => {\n    if (this.state.displayList === true) {\n      return (\n        <RecipeList\n          recipes={this.state.recipes}\n          isLoading={this.state.isLoading}\n          viewDetails={this.viewDetails}\n        />\n      );\n    } else {\n      return (\n        <RecipeInfo id={this.state.id} handleDisplay={this.handleDisplay} />\n      );\n    }\n  };\n\n  handleDisplay = check => {\n    this.setState({\n      displayList: check\n    });\n  };\n\n  viewDetails = (check, id) => {\n    this.setState({\n      displayList: check,\n      id: id\n    });\n  };\n\n  searchInput = event => {\n    this.setState({\n      searchTerms: event.target.value\n    });\n  };\n\n  searchSubmit = e => {\n    e.preventDefault();\n    const { defaultUrl, query, searchTerms } = this.state;\n    this.setState(\n      () => {\n        return {\n          url: `${defaultUrl}${query}${searchTerms}`,\n          searchTerms: \"\"\n        };\n      },\n      () => {\n        this.getData(this.state.url);\n      }\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          value={this.state.search}\n          searchInput={this.searchInput}\n          searchSubmit={this.searchSubmit}\n        />\n        <div className=\"wrapper\">\n          <main>{this.showInfo()}</main>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}