{"version":3,"sources":["fakeList.js","components/RecipeLayout.js","components/RecipeList.js","fakeInfo.js","components/RecipeInfo.js","components/Search.js","components/Header.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["recipes","recipe_id","image_url","title","publisher","source_url","RecipeLayout","this","props","recipeNew","viewDetails","className","key","src","alt","onClick","Component","RecipeList","isLoading","noResult","map","individualRecipe","recipe","f2f_url","ingredients","publisher_url","RecipeInfo","getInfo","axios","method","url","dataResponse","params","rId","id","then","res","data","setState","state","handleDisplay","ing","index","href","target","Search","value","searchInput","searchSubmit","onSubmit","htmlFor","type","placeholder","onChange","name","Header","Footer","App","getData","results","console","log","length","showInfo","displayList","check","event","searchTerms","e","preventDefault","defaultUrl","query","search","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wRAEaA,EAAU,CACrB,CACEC,UAAW,IACXC,UACE,8FACFC,MAAO,eACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,IACXC,UACE,8FACFC,MAAO,0CACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,IACXC,UACE,8FACFC,MAAO,0BACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,IACXC,UACE,8FACFC,MAAO,WACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,IACXC,UACE,8FACFC,MAAO,MACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,IACXC,UACE,8FACFC,MAAO,UACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,IACXC,UACE,8FACFC,MAAO,QACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,IACXC,UACE,8FACFC,MAAO,YACPC,UAAW,iBACXC,WACE,qFAEJ,CACEJ,UAAW,IACXC,UACE,8FACFC,MAAO,UACPC,UAAW,iBACXC,WACE,sFC/DSC,E,iLAfH,IAAD,EACiCC,KAAKC,MAAMC,UAA3CN,EADD,EACCA,MAAOD,EADR,EACQA,UAAWD,EADnB,EACmBA,UAClBS,EAAgBH,KAAKC,MAArBE,YAER,OACE,yBAAKC,UAAU,aAAaC,IAAKX,GAC/B,4BAAKE,GACL,yBAAKU,IAAKX,EAAWY,IAAKX,IAC1B,yBAAKQ,UAAU,mBACb,4BAAQI,QAASL,GAAjB,sB,GAViBM,aC6BZC,E,iLA5BH,IAAD,EAC+CV,KAAKC,MAAnDR,EADD,EACCA,QAASkB,EADV,EACUA,UAAWR,EADrB,EACqBA,YAAaS,EADlC,EACkCA,SACzC,OACE,6BAASR,UAAU,WACjB,wCACA,yBAAKA,UAAU,mBAEZQ,GAAY,2BAAIA,GAChBD,EACC,yCAEAlB,EAAQoB,IAAI,SAAAC,GACV,OACE,kBAAC,EAAD,CACET,IAAKS,EAAiBpB,UACtBQ,UAAWY,EACXX,YAAa,kBACXA,GAAY,EAAOW,EAAiBpB,sB,GAlB/Be,aCFZM,EAAS,CACpBC,QAAS,kCACTrB,UACE,8FACFsB,YAAa,CACX,wDACA,4BACA,wCACA,+CACA,4CACA,yCAEFpB,UAAW,iBACXqB,cAAe,2BACfpB,WACE,oFACFF,MAAO,2C,gBCiDMuB,E,YA7Db,WAAYlB,GAAQ,IAAD,8BACjB,4CAAMA,KAQRmB,QAAU,WACRC,IAAM,CACJC,OAAQ,MACRC,IAAK,oCACLC,aAAc,OACdC,OAAQ,CACNpB,IAAK,mCACLqB,IAAI,GAAD,OAAK,EAAKzB,MAAM0B,OAEpBC,KAAK,SAAAC,GACNA,EAAMA,EAAIC,KAAKf,OAEf,EAAKgB,SAAS,CACZhB,OAAQc,OApBZ,EAAKG,MAAQ,CACXjB,OAAQA,EACRQ,IAAK,qCAJU,E,iFA4BlBvB,KAAKoB,Y,+BAII,IAAD,EAC+CpB,KAAKgC,MAAMjB,OAAzDnB,EADD,EACCA,MAAOD,EADR,EACQA,UAAWG,EADnB,EACmBA,WAAYmB,EAD/B,EAC+BA,YAC9BgB,EAAkBjC,KAAKC,MAAvBgC,cACR,OACE,6BAAS7B,UAAU,cACjB,yBAAKA,UAAU,kBACb,yBAAKE,IAAKX,EAAWY,IAAKX,KAE5B,yBAAKQ,UAAU,iBACb,4BAAKR,GACL,4CACA,wBAAIQ,UAAU,kBACXa,EAAYJ,IAAI,SAACqB,EAAKC,GACrB,OAAO,wBAAI9B,IAAK8B,GAAQD,MAG5B,yBAAK9B,UAAU,oBACb,gCACE,uBAAGgC,KAAMtC,EAAYuC,OAAO,uBAA5B,sBAIF,4BAAQ7B,QAAS,kBAAMyB,GAAc,KAArC,0B,GAvDaxB,aCsBV6B,E,iLAvBH,IAAD,EACsCtC,KAAKC,MAA1CsC,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,aAC5B,OACE,yBAAKrC,UAAU,mBACb,sEACA,0BAAMA,UAAU,YAAYsC,SAAUD,GACpC,2BAAOE,QAAQ,SAASvC,UAAU,kBAAlC,UACA,2BACEwC,KAAK,OACLC,YAAY,wBACZN,MAAOA,EACPO,SAAUN,EACVb,GAAG,SACHoB,KAAK,WAEP,4BAAQ3C,UAAU,UAChB,uBAAGA,UAAU,yB,GAjBJK,aCqBNuC,E,iLAnBH,IAAD,EACsChD,KAAKC,MAA1CsC,EADD,EACCA,MAAOC,EADR,EACQA,YAAaC,EADrB,EACqBA,aAC5B,OACE,6BACE,gCACE,4BACE,uBAAGrC,UAAU,uBADf,iBAIA,kBAAC,EAAD,CACEmC,MAAOA,EACPC,YAAaA,EACbC,aAAcA,U,GAbLhC,aCDAwC,E,iLAEjB,OACE,gCACE,uCACY,IACV,uBAAGb,KAAK,sCAAR,kBAFF,mB,GAJ4B3B,aC8IrByC,G,kBAtIb,aAAe,IAAD,8BACZ,+CAmBFC,QAAU,SAAA5B,GACRF,IAAM,CACJC,OAAQ,MACRC,IAAKA,EACLC,aAAc,SACbI,KAAK,SAAAwB,GAENA,EAAUA,EAAQtB,KAAKrC,QACvB4D,QAAQC,IAAIF,EAASA,EAAQG,QACN,IAAnBH,EAAQG,QACVH,EAAQG,OAAS,GACjB,EAAKxB,SAAS,CACZtC,QAAS2D,EACTzC,WAAW,EACXC,SAAU,QAGgB,IAAnBwC,EAAQG,OACjB,EAAKxB,SAAS,CACZnB,SACE,oFACFD,WAAW,EACXlB,QAAS,KAIX,EAAKsC,SAAS,CACZtC,QAAS2D,EACTzC,WAAW,EACXC,SAAU,UAjDJ,EA4Dd4C,SAAW,WACT,OAA+B,IAA3B,EAAKxB,MAAMyB,YAEX,kBAAC,EAAD,CACEhE,QAAS,EAAKuC,MAAMvC,QACpBkB,UAAW,EAAKqB,MAAMrB,UACtBR,YAAa,EAAKA,YAClBS,SAAU,EAAKoB,MAAMpB,WAKvB,kBAAC,EAAD,CAAYe,GAAI,EAAKK,MAAML,GAAIM,cAAe,EAAKA,iBAxE3C,EA8EdA,cAAgB,SAAAyB,GACd,EAAK3B,SAAS,CACZ0B,YAAaC,KAhFH,EAqFdvD,YAAc,SAACuD,EAAO/B,GACpB,EAAKI,SAAS,CACZ0B,YAAaC,EACb/B,GAAIA,KAxFM,EA6Fda,YAAc,SAAAmB,GACZ,EAAK5B,SAAS,CACZ6B,YAAaD,EAAMtB,OAAOE,SA/FhB,EAoGdE,aAAe,SAAAoB,GACbA,EAAEC,iBADgB,MAEyB,EAAK9B,MAAxC+B,EAFU,EAEVA,WAAYC,EAFF,EAEEA,MAAOJ,EAFT,EAESA,YAC3B,EAAK7B,SACH,WACE,MAAO,CACLR,IAAI,GAAD,OAAKwC,GAAL,OAAkBC,GAAlB,OAA0BJ,GAC7BA,YAAa,KAGjB,WACE,EAAKT,QAAQ,EAAKnB,MAAMT,QA7G5B,EAAKS,MAAQ,CACXvC,QAASA,EACT8B,IACE,4EAEFwC,WACE,4EACFpD,WAAW,EACX8C,aAAa,EACb9B,GAAI,MACJiC,YAAa,GACbI,MAAO,MACP3D,IAAK,mCACLO,SAAU,IAfA,E,iFAwDZZ,KAAKmD,QAAQnD,KAAKgC,MAAMT,O,+BA8DxB,OACE,yBAAKnB,UAAU,OACb,kBAAC,EAAD,CACEmC,MAAOvC,KAAKgC,MAAMiC,OAClBzB,YAAaxC,KAAKwC,YAClBC,aAAczC,KAAKyC,eAErB,yBAAKrC,UAAU,WACb,8BAAOJ,KAAKwD,aAEd,kBAAC,EAAD,W,GAjIU/C,cCGEyD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjD,KAAK,SAAAkD,GACjCA,EAAaC,iB","file":"static/js/main.ae9b90f5.chunk.js","sourcesContent":["//This is a fake example of a result from the API call. Used to allow styling and testing without using up API calls and to in case the API has gone down.\r\n\r\nexport const recipes = [\r\n  {\r\n    recipe_id: 100,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jam Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 101,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Jalapeno Popper Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 102,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Grilled Cheese Sandwich\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 103,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Pad Thai\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 104,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Ham\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 105,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Burrito\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 106,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Cake!\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 107,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Chow Mein\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  },\r\n  {\r\n    recipe_id: 108,\r\n    image_url:\r\n      \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n    title: \"Lasagna\",\r\n    publisher: \"Closet Cooking\",\r\n    source_url:\r\n      \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\"\r\n  }\r\n];\r\n","import React, { Component } from \"react\";\r\n\r\n//displays each recipe in the mapped API results\r\nclass RecipeLayout extends Component {\r\n  render() {\r\n    const { title, image_url, recipe_id } = this.props.recipeNew;\r\n    const { viewDetails } = this.props;\r\n\r\n    return (\r\n      <div className=\"recipeCard\" key={recipe_id}>\r\n        <h3>{title}</h3>\r\n        <img src={image_url} alt={title}></img>\r\n        <div className=\"buttonContainer\">\r\n          <button onClick={viewDetails}>View Details</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RecipeLayout;\r\n","import React, { Component } from \"react\";\r\nimport RecipeLayout from \"./RecipeLayout\";\r\n\r\nclass RecipeList extends Component {\r\n  render() {\r\n    const { recipes, isLoading, viewDetails, noResult } = this.props;\r\n    return (\r\n      <section className=\"recipes\">\r\n        <h2>Recipes:</h2>\r\n        <div className=\"recipeContainer\">\r\n          {/*Ternary operator to check if API call has returned data, if not show loading*/}\r\n          {noResult && <p>{noResult}</p>}\r\n          {isLoading ? (\r\n            <p>Loading...</p>\r\n          ) : (\r\n            recipes.map(individualRecipe => {\r\n              return (\r\n                <RecipeLayout\r\n                  key={individualRecipe.recipe_id}\r\n                  recipeNew={individualRecipe}\r\n                  viewDetails={() =>\r\n                    viewDetails(false, individualRecipe.recipe_id)\r\n                  }\r\n                />\r\n              );\r\n            })\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default RecipeList;\r\n","//This is a fake example of a specific recipe result from the API call. Used to allow styling and testing without using up API calls, and to use in case API is down.\r\nexport const recipe = {\r\n  f2f_url: \"http://food2fork.com/view/35382\",\r\n  image_url:\r\n    \"http://static.food2fork.com/Jalapeno2BPopper2BGrilled2BCheese2BSandwich2B12B500fd186186.jpg\",\r\n  ingredients: [\r\n    \"2 jalapeno peppers, cut in half lengthwise and seeded\",\r\n    \"2 slices sour dough bread\",\r\n    \"1 tablespoon butter, room temperature\",\r\n    \"2 tablespoons cream cheese, room temperature\",\r\n    \"1/2 cup jack and cheddar cheese, shredded\",\r\n    \"1 tablespoon tortilla chips, crumbled\"\r\n  ],\r\n  publisher: \"Closet Cooking\",\r\n  publisher_url: \"http://closetcooking.com\",\r\n  source_url:\r\n    \"http://www.closetcooking.com/2011/04/jalapeno-popper-grilled-cheese-sandwich.html\",\r\n  title: \"Jalapeno Popper Grilled Cheese Sandwich\"\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { recipe } from \"../fakeInfo\";\r\nimport axios from \"axios\";\r\n\r\nclass RecipeInfo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      recipe: recipe,\r\n      url: \"https://www.food2fork.com/api/get\"\r\n    };\r\n  }\r\n\r\n  //make a new API call with specific recipe info\r\n  getInfo = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: \"https://www.food2fork.com/api/get\",\r\n      dataResponse: \"json\",\r\n      params: {\r\n        key: \"07d7e44a4bc10ad558be2bdd5a88bbbc\",\r\n        rId: `${this.props.id}`\r\n      }\r\n    }).then(res => {\r\n      res = res.data.recipe;\r\n\r\n      this.setState({\r\n        recipe: res\r\n      });\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n   this.getInfo();\r\n  }\r\n\r\n  //render the info pulled form the API call\r\n  render() {\r\n    const { title, image_url, source_url, ingredients } = this.state.recipe;\r\n    const { handleDisplay } = this.props;\r\n    return (\r\n      <section className=\"recipeInfo\">\r\n        <div className=\"imageContainer\">\r\n          <img src={image_url} alt={title}></img>\r\n        </div>\r\n        <div className=\"infoContainer\">\r\n          <h3>{title}</h3>\r\n          <h4>Ingredients:</h4>\r\n          <ul className=\"ingredientList\">\r\n            {ingredients.map((ing, index) => {\r\n              return <li key={index}>{ing}</li>;\r\n            })}\r\n          </ul>\r\n          <div className=\"buttonsContainer\">\r\n            <button>\r\n              <a href={source_url} target=\"_blank rel=noopener\">\r\n                View Instructions\r\n              </a>\r\n            </button>\r\n            <button onClick={() => handleDisplay(true)}>Back to Recipes</button>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\nexport default RecipeInfo;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Search extends Component {\r\n  render() {\r\n    const { value, searchInput, searchSubmit } = this.props;\r\n    return (\r\n      <div className=\"searchContainer\">\r\n        <h4>Enter ingredients seperated by a comma</h4>\r\n        <form className=\"searchBar\" onSubmit={searchSubmit}>\r\n          <label htmlFor=\"search\" className=\"visuallyHidden\">Search</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"beef, carrots, onions\"\r\n            value={value}\r\n            onChange={searchInput}\r\n            id=\"search\"\r\n            name=\"search\"\r\n          />\r\n          <button className=\"search\">\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Search;\r\n","import React, { Component } from \"react\";\r\nimport Search from \"./Search\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    const { value, searchInput, searchSubmit } = this.props;\r\n    return (\r\n      <div>\r\n        <header>\r\n          <h1>\r\n            <i className=\"fas fa-pizza-slice\"></i>\r\n            Recipes To Go\r\n          </h1>\r\n          <Search\r\n            value={value}\r\n            searchInput={searchInput}\r\n            searchSubmit={searchSubmit}\r\n          />\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <footer>\r\n        <p>\r\n          Copyright{\" \"}\r\n          <a href=\"https://twitter.com/developer_matt\">Matt Donaldson</a> 2019\r\n          &copy;\r\n        </p>\r\n      </footer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport { recipes } from \"./fakeList\";\nimport RecipeList from \"./components/RecipeList\";\nimport RecipeInfo from \"./components/RecipeInfo\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport \"./App.css\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: recipes,\n      url:\n        \"https://www.food2fork.com/api/search?key=d32213004e516b2cc8d1e2a62585422d\",\n      //defaultURL needed because url is updated on search and need a default url to reset as well as use a different key to help mitigate daily API call limit of 50\n      defaultUrl:\n        \"https://www.food2fork.com/api/search?key=963365ead40c2c76ed338a03bb49a65a\",\n      isLoading: true,\n      displayList: true,\n      id: 35384,\n      searchTerms: \"\",\n      query: \"&q=\",\n      key: \"963365ead40c2c76ed338a03bb49a65a\",\n      noResult: \"\"\n    };\n  }\n\n  // make ajax request\n  getData = url => {\n    axios({\n      method: \"GET\",\n      url: url,\n      dataResponse: \"json\"\n    }).then(results => {\n      //store ajax call info into a variable called results and limit the results (default is 30)\n      results = results.data.recipes;\n      console.log(results, results.length);\n      if (results.length !== 0) {\n        results.length = 12;\n        this.setState({\n          recipes: results,\n          isLoading: false,\n          noResult: null\n        });\n        //If no results\n      } else if (results.length === 0) {\n        this.setState({\n          noResult:\n            \"Sorry, your search had no results! Make sure you put commas between search terms.\",\n          isLoading: false,\n          recipes: []\n        });\n        //all other cases, just in case\n      } else {\n        this.setState({\n          recipes: results,\n          isLoading: false,\n          noResult: null\n        });\n      }\n    });\n  };\n\n  componentDidMount() {\n    this.getData(this.state.url);\n  }\n\n  //function to show recipe list or recipe info if there is no list data\n  showInfo = () => {\n    if (this.state.displayList === true) {\n      return (\n        <RecipeList\n          recipes={this.state.recipes}\n          isLoading={this.state.isLoading}\n          viewDetails={this.viewDetails}\n          noResult={this.state.noResult}\n        />\n      );\n    } else {\n      return (\n        <RecipeInfo id={this.state.id} handleDisplay={this.handleDisplay} />\n      );\n    }\n  };\n\n  //function to show recipe list if populated, called in recipeInfo\n  handleDisplay = check => {\n    this.setState({\n      displayList: check\n    });\n  };\n\n  //function to show recipe details if 'view details' is clicked, called in recipeLayout\n  viewDetails = (check, id) => {\n    this.setState({\n      displayList: check,\n      id: id\n    });\n  };\n\n  //function to store search input data, called in Search\n  searchInput = event => {\n    this.setState({\n      searchTerms: event.target.value\n    });\n  };\n\n  //function to handle form submit and show results, called in Search\n  searchSubmit = e => {\n    e.preventDefault();\n    const { defaultUrl, query, searchTerms } = this.state;\n    this.setState(\n      () => {\n        return {\n          url: `${defaultUrl}${query}${searchTerms}`,\n          searchTerms: \"\"\n        };\n      },\n      () => {\n        this.getData(this.state.url);\n      }\n    );\n  };\n\n  //render for the App\n  render() {\n    return (\n      <div className=\"App\">\n        <Header\n          value={this.state.search}\n          searchInput={this.searchInput}\n          searchSubmit={this.searchSubmit}\n        />\n        <div className=\"wrapper\">\n          <main>{this.showInfo()}</main>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}